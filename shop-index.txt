
@extends('layouts.shop')

@section('body')
<h1>Your Shopping Cart</h1>
    <div id="cart-container">
      <div id="cart">
        <i class="fa fa-shopping-cart fa-2x openCloseCart" aria-hidden="true"></i>
        <button id="emptyCart">Empty Cart</button>
      </div>
      <span id="itemCount"></span>
    </div>
 

  <div id="shoppingCart">
    <div id="cartItemsContainer">
      <h2>Items in your cart</h2>
      <i class="fa fa-times-circle-o fa-3x openCloseCart" aria-hidden="true"></i>
      <div id="cartItems">
      	{{-- <button class="removeItem">Remove Item</button> --}}
      </div>
      <button class="btn btn-primary" id="checkout">Checkout</button>;
      <span id="cartTotal"></span>
  	</div>
  </div>

  <nav>
  	<ul>
  		<li><a href="index.html">Shopping Cart</a></li>
  	</ul>
  </nav>
  <div class="container container-fluid" id="items">
  	
  </div>

@endsection

//layouts/shop.blade
<!doctype html>
 <html lang="en">
 <head>
 <meta charset="UTF-8">
 <link href="{{asset('css/shop.css')}}" rel="stylesheet"> 
 <title>shop</title>
 </head>
 <body>
 @yield('body')
 @include('layouts.shopheader')
 </body>
 </html>


 public/css/shop.css 
 header {
    height: 100px;
  }
  
  h1 {
    float: left;
    margin: 0;
  }
  
  h2 {
    margin: 0 0 50px;
  }
  
  #cart-container {
    float: right;
    width: 210px;
    position: relative;
  }
  
  #itemCount {
    position: absolute;
    display: none;
    top: -10px;
    left: -10px;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background: red;
    color: white;
    text-align: center;
  }
  
  nav {
    margin-bottom: 30px;
  }
  
  nav ul {
    list-style: none;
    overflow: auto;
    width: 100%;
    background: #444444;
  }
  
  nav ul li {
    float: left;
    padding: 5px 20px;
  }
  
  nav ul li a {
    color: #fff;
    text-decoration: none;
  }
  
  nav ul li:hover {
    color: #444444;
    background: #cccccc;
  }
  
  nav ul li:hover a {
    color: #444444;
  }
  
  img {
    width: 100%;
  }
  
  .item {
    width: 31%;
    float: left;
    margin: 1%;
  }
  
  .itemText p {
    margin-bottom: 20px;
  }
  
  .price-container {
    margin-top: 20px;
  }
  
  i:hover {
    cursor: pointer;
  }
  
  #shoppingCart {
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    display: none;
    position: absolute;
    z-index: 9999;
    background: rgba(0, 0, 0, 0.6);
  }
  
  #cartItemsContainer {
    position: relative;
    width: 600px;
    left: 50%;
    top: 150px;
    margin-left: -300px;
    padding: 40px;
    box-shadow: 0 0 10px black;
    background: #e9e9e9;
    overflow: auto;
  }
  
  #cartItemsContainer i {
    position: absolute;
    top: 20px;
    right: 20px;
  }
  
  #cartItemsContainer .itemDetails {
    overflow: auto;
    width: 100%;
    margin-bottom: 40px;
  }
  
  #cartItemsContainer .itemImage {
    float: left;
    width: 260px;
    padding: 0 40px;
  }
  
  #cartItemsContainer .itemText {
    float: right;
    width: 260px;
    padding: 0 40px;
  }
  
  #cartItemsContainer .itemText .price-container {
    margin-top: 0;
  }
  
  .removeItem {
    margin-left: 40px;
  }

  //layouts/shopheader.blade
  {{-- header.blade --}}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.2/dist/css/bootstrap.min.css" rel="stylesheet"> 
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.css" integrity="sha512-aOG0c6nPNzGk+5zjwyJaoRUgCdOrfSDhmMID2u4+OIslr0GjpLKo7Xm0Ao3xmpM4T8AmIouRkqwj1nrdVsLKEQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/paginationjs/2.1.5/pagination.css" integrity="sha512-QmxybGIvkSI8+CGxkt5JAcGOKIzHDqBMs/hdemwisj4EeGLMXxCm9h8YgoCwIvndnuN1NdZxT4pdsesLXSaKaA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/datatables/1.10.21/css/dataTables.bootstrap4.min.css" integrity="sha512-PT0RvABaDhDQugEbpNMwgYBCnGCiTZMh9yOzUsJHDgl/dMhD9yjHAwoumnUk3JydV3QTcIkNDuN40CJxik5+WQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.2/dist/js/bootstrap.min.js" integrity="sha384-PsUw7Xwds7x08Ew3exXhqzbhuEYmA2xnwc8BuD6SEr+UmEHlX8/MCltYEodzWA4u" crossorigin="anonymous"></script>
<script src="https://kit.fontawesome.com/c88097f817.js" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootbox.js/4.4.0/bootbox.min.js" integrity="sha512-8NOmlkzoskIBni4iy5onHC57Mndt17mZgWkYJvxe5jwBJu3spYIRSjTkYJ9OLNS9Min+bsSqbDfGaoejWxyFiw==" crossorigin="anonymous"></script>
<script src="https://code.jquery.com/ui/1.13.0-rc.2/jquery-ui.min.js" integrity="sha256-RQLbEU539dpygNMsBGZlplus6CkitaLy0btTCHcULpI=" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.31.3/js/jquery.tablesorter.min.js" integrity="sha512-qzgd5cYSZcosqpzpn7zF2ZId8f/8CHmFKZ8j7mU4OUXTNRd5g+ZHBPsgKEwoqxCtdQvExE5LprwwPAgoicguNg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://unpkg.com/infinite-scroll@4/dist/infinite-scroll.pkgd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/paginationjs/2.1.5/pagination.min.js" integrity="sha512-1zzZ0ynR2KXnFskJ1C2s+7TIEewmkB2y+5o/+ahF7mwNj9n3PnzARpqalvtjSbUETwx6yuxP5AJXZCpnjEJkQw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/datatables/1.10.21/css/dataTables.jqueryui.min.css" integrity="sha512-x2AeaPQ8YOMtmWeicVYULhggwMf73vuodGL7GwzRyrPDjOUSABKU7Rw9c3WNFRua9/BvX/ED1IK3VTSsISF6TQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/datatables/1.10.21/js/jquery.dataTables.min.js" integrity="sha512-BkpSL20WETFylMrcirBahHfSnY++H2O1W+UnEEO4yNIl+jI2+zowyoGJpbtk6bx97fBXf++WJHSSK2MV4ghPcg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/datatables.net-buttons/2.0.1/js/dataTables.buttons.min.js" integrity="sha512-QZc1PH3GIO39Sd0/aCa+z7oytor2FmU8n/mjOheSAAZen9KBInfBcl1DLoNpFFZu9DbToWq+OBaVOpOBYkoX+w==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/datatables.net-select/1.3.3/dataTables.select.min.js" integrity="sha512-uMQIzRTYB4sDMMdkz8SocjrrNFpJvQjmAfrDrAHZe348+5451qsU8HAWxeB5stYB3XdiPGYupJfV2vgVw5oRGQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://unpkg.com/infinite-scroll@4/dist/infinite-scroll.pkgd.js"></script>
{{-- <script src="https://cdnjs.cloudflare.com/ajax/libs/jscroll/#.#.#/jquery.jscroll.min.js"></script> --}}

<script src="{{asset('js/shop.js')}}"></script>

Route::view('/shop', 'shop.index');

shop.js 
$(document).ready(function () {
    $.ajax({
        type: "GET",
        url: "/api/item",
        dataType: 'json',
        success: function (data) {
            console.log(data);
            $.each(data, function (key, value) {
                // console.log(key);
                id = value.item_id;
                var item = "<div class='item'><div class='itemDetails'><div class='itemImage'><img src="+"/storage/" + value.img_path + " width='200px', height='200px'/></div><div class='itemText'><p class='price-container'>Price: Php <span class='price'>" + value.sell_price + "</span></p><p>" + value.description + "</p></div><input type='number' class='qty' name='quantity' min='1' max='5'><p class='itemId'>" + value.item_id + "</p>      </div><button type='button' class='btn btn-primary add' >Add to cart</button></div>";
                $("#items").append(item);

            });

        },
        error: function () {
            console.log('AJAX load did not work');
            alert("error");
        }
    });

    
})

$("#items").on('click', '.add', function () {
    itemCount ++;
    $('#itemCount').text(itemCount).css('display', 'block');
    clone =  $(this).siblings().clone().appendTo('#cartItems')
               .append('<button class="removeItem">Remove Item</button>');
    var price = parseInt($(this).siblings().find('.price').text()); 
    priceTotal += price;
    $('#cartTotal').text("Total: â‚¬" + priceTotal);
    });


    $('#shoppingCart').on('click', '.removeItem', function(){
        $(this).parent().remove();  
        itemCount --;
        $('#itemCount').text(itemCount);
  
        // Remove Cost of Deleted Item from Total Price
        var price = parseInt($(this).siblings().find('.price').text());
        priceTotal -= price;
        $('#cartTotal').text("Total: php" + priceTotal);
  
        if (itemCount == 0) {
          $('#itemCount').css('display', 'none');
        }
      });
      $('#emptyCart').click(function() {
        itemCount = 0;
        priceTotal = 0;
  
        $('#itemCount').css('display', 'none');
        $('#cartItems').text('');
        $('#cartTotal').text("Total: â‚¬" + priceTotal);
      }); 

      public function postCheckout(Request $request){

        // $items = json_decode($request->json()->all());
        $items = json_decode($request->getContent(),true);
        // Log::info(print_r($request->getContent()));
        Log::info(print_r($items, true));
          try {
              DB::beginTransaction();
              $order = new Order();
              $customer =  Customer::find(3);
              // dd($cart->items);
            $customer->orders()->save($order);
              // dd($cart->items);
            // Log::info(print_r($order->orderinfo_id, true));
            foreach($items as $item) {
              // Log::info(print_r($item, true));
               $id = $item['item_id'];
               // Log::info(print_r($, true));
               $order->items()->attach($order->orderinfo_id,['quantity'=> $item['quantity'],'item_id'=>$id]);
               // Log::info(print_r($order, true));
               $stock = Stock::find($id);
               $stock->quantity = $stock->quantity - $item['quantity'];
               $stock->save();
            }
            
          }
          catch (\Exception $e) {
              DB::rollback();
              return response()->json(array('status' => 'Order failed','code'=>409,'error'=>$e->getMessage()));
              }
      
          DB::commit();
          return response()->json(array('status' => 'Order Success','code'=>200,'order id'=>$order->orderinfo_id));
      
          }//end postcheckout
  }

order model
  protected $table = 'orderinfo';
	protected $primaryKey = 'orderinfo_id';
	public $timestamps = false;
	protected $fillable = ['customer_id','date_placed','date_shipped','shipping','shipvia','status'];
	
	public function customer(){
		return $this->belongsTo('App\Models\Customer');
	}

	public function items(){
		return $this->belongsToMany(Item::class,'orderline','item_id','orderinfo_id')->withPivot('quantity');
	}

customer model
    class Customer extends Model
{
    use HasFactory;
    public $table = 'customer';
    public $primaryKey = 'customer_id';
    public $timestamps = false;
    protected $guarded = ['customer_id'];
    

    protected $fillable = ['fname','lname',
        'title','addressline','town','zipcode',
        'phone','email','user_id'
    ];

     public function orders(){

        return $this->hasMany('App\Models\Order','customer_id');

    }
}


stock model 
protected $primaryKey = 'item_id';
    protected $table = 'stock';
	public $timestamps = false;
	protected $fillable = ['quantity','item_id'];
	
	public function item(){
    	return $this->belongsTo('App\Models\Item','item_id');
    }


    $('#checkout').click(function () {
        itemCount = 0;
        priceTotal = 0;
        let items = new Array();
        
        $("#cartItems").find(".itemDetails").each(function (i, element) {
            // console.log(element);
            let itemid = 0;
            let qty = 0;

            qty = parseInt($(element).find($(".qty")).val());
            itemid = parseInt($(element).find($(".itemId")).html());

            items.push(
                {
                    "item_id": itemid,
                    "quantity": qty
                }
            );

        });
        console.log(JSON.stringify(items));
        var data = JSON.stringify(items);

        $.ajax({
            type: "POST",
            url: "/api/item/checkout",
            data: data,
            headers: { 'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content') },
            dataType: "json",
            processData: false,
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                console.log(data);
                alert(data.status);
            },
            error: function (error) {
                alert(data.status);
            }
        });
        $('#itemCount').css('display', 'none');
        $('#cartItems').text('');
        $('#cartTotal').text("Total: â‚¬" + priceTotal);

        // console.log(clone.find(".itemDetails"));

    });

    Route::post('/item/checkout',[
        'uses' => 'ItemController@postCheckout',
        'as' => 'checkout'
    ]);


    class Order extends Model
    {
        use HasFactory;
        protected $table = 'orderinfo';
        protected $primaryKey = 'orderinfo_id';
        public $timestamps = false;
        protected $fillable = ['customer_id','date_placed','date_shipped','shipping','shipvia','status'];
        
        public function customer(){
            return $this->belongsTo('App\Models\Customer');
        }
    
        public function items(){
            return $this->belongsToMany(Item::class,'orderline','item_id','orderinfo_id')->withPivot('quantity');
        }
    }

    class Stock extends Model
{
    use HasFactory;
    protected $primaryKey = 'item_id';
    protected $table = 'stock';
	public $timestamps = false;
	protected $fillable = ['quantity','item_id'];
	
	public function item(){
    	return $this->belongsTo('App\Models\Item','item_id');
    }
}

class Customer extends Model
{
    use HasFactory;
    public $table = 'customer';
    public $primaryKey = 'customer_id';
    public $timestamps = false;
    protected $guarded = ['customer_id'];
    

    protected $fillable = ['fname','lname',
        'title','addressline','town','zipcode',
        'phone','email','user_id'
    ];

     public function orders(){

        return $this->hasMany('App\Models\Order','customer_id');

    }
}

var itemCount = 0;
var priceTotal = 0;
var quantity = 0;
var clone = "";

$(document).ready(function () {
    $.ajax({
        type: "GET",
        url: "/api/item",
        dataType: 'json',
        success: function (data) {
            console.log(data);
            $.each(data, function (key, value) {
                // console.log(key);
                id = value.item_id;
                var item = "<div class='item'><div class='itemDetails'><div class='itemImage'><img src=" + "/storage/" + value.img_path + " width='200px', height='200px'/></div><div class='itemText'><p class='price-container'>Price: Php <span class='price'>" + value.sell_price + "</span></p><p>" + value.description + "</p></div><input type='number' class='qty' name='quantity' min='1' max='5'><p class='itemId'>" + value.item_id + "</p> </div><button type='button' class='btn btn-primary add' >Add to cart</button></div>";
                $("#items").append(item);

            });

        },
        error: function () {
            console.log('AJAX load did not work');
            alert("error");
        }
    });

    $("#items").on('click', '.add', function () {
        itemCount++;
        $('#itemCount').text(itemCount).css('display', 'block');
        clone = $(this).siblings().clone().appendTo('#cartItems')
            .append('<button class="removeItem">Remove Item</button>');
        var price = parseInt($(this).siblings().find('.price').text());
        priceTotal += price;
        $('#cartTotal').text("Total: â‚¬" + priceTotal);
    });


    $('.openCloseCart').click(function () {
        $('#shoppingCart').toggle();
    });

    $('#shoppingCart').on('click', '.removeItem', function () {
        $(this).parent().remove();
        itemCount--;
        $('#itemCount').text(itemCount);

        // Remove Cost of Deleted Item from Total Price
        var price = parseInt($(this).siblings().find('.price').text());
        priceTotal -= price;
        $('#cartTotal').text("Total: php" + priceTotal);

        if (itemCount == 0) {
            $('#itemCount').css('display', 'none');
        }
    });

    $('#emptyCart').click(function () {
        itemCount = 0;
        priceTotal = 0;

        $('#itemCount').css('display', 'none');
        $('#cartItems').text('');
        $('#cartTotal').text("Total: â‚¬" + priceTotal);
    });

    $('#checkout').click(function () {
        itemCount = 0;
        priceTotal = 0;
        let items = new Array();
        
        $("#cartItems").find(".itemDetails").each(function (i, element) {
            // console.log(element);
            let itemid = 0;
            let qty = 0;

            qty = parseInt($(element).find($(".qty")).val());
            itemid = parseInt($(element).find($(".itemId")).html());

            items.push(
                {
                    "item_id": itemid,
                    "quantity": qty
                }
            );

        });
        console.log(JSON.stringify(items));
        var data = JSON.stringify(items);

        $.ajax({
            type: "POST",
            url: "/api/item/checkout",
            data: data,
            headers: { 'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content') },
            dataType: "json",
            processData: false,
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                console.log(data);
                alert(data.status);
            },
            error: function (error) {
                alert(data.status);
            }
        });
        $('#itemCount').css('display', 'none');
        $('#cartItems').text('');
        $('#cartTotal').text("Total: P" + priceTotal);

        // console.log(clone.find(".itemDetails"));

    });
})

public function postCheckout(Request $request){
        $items = json_decode($request->getContent(),true);
        Log::info(print_r($items, true));
          try {
            DB::beginTransaction();
            $order = new Order();
            $customer =  Customer::find(1);
              
            $customer->orders()->save($order);
            
            foreach($items as $item) {
               $id = $item['item_id'];
               $order->items()->attach($order->orderinfo_id,['quantity'=> $item['quantity'],'item_id'=>$id]);
               $stock = Stock::find($id);
               $stock->quantity = $stock->quantity - $item['quantity'];
               $stock->save();
            }
            
          }
        catch (\Exception $e) {
              DB::rollback();
              return response()->json(array('status' => 'Order failed','code'=>409,'error'=>$e->getMessage()));
        }
      
          DB::commit();
          return response()->json(array('status' => 'Order Success','code'=>200,'order id'=>$order->orderinfo_id));
      
        
    }

    Route::post('/item/checkout',[
    'uses' => 'ItemController@postCheckout',
    'as' => 'checkout'
]);


$(document).ready(function () {
    $.ajax({
        type: "GET",
        url: "/api/dashboard/title-chart",
        dataType: "json",
        success: function (data) {
            console.log(data);
            var ctx = document.getElementById("titleChart");
            var myBarChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: data.labels,
                    datasets: [{
                        label: 'Number of Active Customers',
                        data: data.data,
                        backgroundColor: [
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(255, 99, 132, 0.2)'
                        ],
                        borderColor: [
                            'rgba(75, 192, 192, 1)',
                            'rgba(255,99,132,1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                      y: {
                        beginAtZero: true
                      }
                    }
                  },
            });
            
        },
        error: function (error) {
            console.log(error);
        }
    });

    $.ajax({
        type: "GET",
        url: "/api/dashboard/sales-chart",
        dataType: "json",
        success: function (data) {
            console.log(data);
            var ctx = document.getElementById("salesChart");
            var myBarChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: data.labels,
                    datasets: [{
                        label: 'Monthly sales',
                        data: data.data,
                        backgroundColor: [
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(255, 99, 132, 0.2)'
                        ],
                        borderColor: [
                            'rgba(75, 192, 192, 1)',
                            'rgba(255,99,132,1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                      y: {
                        beginAtZero: true
                      }
                    }
                  },
            });
            
        },
        error: function (error) {
            console.log(error);
        }
    });

    $.ajax({
        type: "GET",
        url: "/api/dashboard/items-chart",
        dataType: "json",
        success: function (data) {
            console.log(data);
            var ctx = document.getElementById("itemsChart");
            var myBarChart = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: data.labels,
                    datasets: [{
                        label: 'number of items sold',
                        data: data.data,
                        backgroundColor: () => {
                             //generates random colours and puts them in string
                            
                             var colors = [];
                            for (var i = 0; i < data.data.length; i++) {
                              var letters = '0123456789ABCDEF'.split('');
                              var color = '#';
                              for (var x = 0; x < 6; x++) {
                                color += letters[Math.floor(Math.random() * 16)];
                              }
                              colors.push(color);
                            }
                            return colors;
                          },
                        borderColor: [
                            'rgba(75, 192, 192, 1)',
                            'rgba(255,99,132,1)'
                        ],
                        borderWidth: 1,
                        responsive: true,
                        // hoverBackgroundColor: colors,
                    }]
                },
                
            });
            
        },
        error: function (error) {
            console.log(error);
        }
    });
});

class DashboardController extends Controller
{
    public function titleChart() {
        $customer = DB::table('customer')->groupBy('title')->orderBy('total')->pluck(DB::raw('count(title) as total'),'title')->all();
        $labels = (array_keys($customer));
        
        $data= array_values($customer);
        // dd($customer, $data, $labels);
        return response()->json(array('data' => $data, 'labels' => $labels));
    }

    public function salesChart() {
        
        $sales = DB::table('item as i')
                    ->join('orderline as ol', 'i.item_id', '=', 'ol.item_id')
                    ->join('orderinfo as oi', 'ol.orderinfo_id', '=', 'oi.orderinfo_id')
                    ->select(DB::raw('monthname(oi.date_placed) as month, sum(ol.quantity * i.sell_price) as total'))
                    ->groupBy('oi.date_placed')
                    ->pluck('total','month')
                    ->all();
                    
        // dd($sales);
        $labels = (array_keys($sales));
        
        $data= array_values($sales);
        // dd($sales, $data, $labels);
        return response()->json(array('data' => $data, 'labels' => $labels));
    }

    public function itemsChart() {
        
        $items = DB::table('item as i')
                    ->join('orderline as ol', 'i.item_id', '=', 'ol.item_id')
                    ->select(DB::raw('i.description as items, sum(ol.quantity) as total'))
                    ->groupBy('i.description')
                    ->pluck('total','items')
                    ->all();
                    
        // dd($items);
        $labels = (array_keys($items));
        
        $data= array_values($items);
        // dd($sales, $data, $labels);
        return response()->json(array('data' => $data, 'labels' => $labels));
    }
}

//dashboard/index.blade
@extends('layouts.base')
@section('body')
<div>
    <canvas id="titleChart"></canvas>
</div>

<div>
    <canvas id="salesChart"></canvas>
</div>

<div class="chart-container" style="position: relative; height:40vh; width:80vw">
    <canvas id="itemsChart"></canvas>
</div>
@endsection

//Route
Route::get('/dashboard/title-chart',[
    'uses' => 'DashboardController@titleChart',
    'as' => 'dashboard.titleChart'
]);
Route::get('/dashboard/sales-chart',[
    'uses' => 'DashboardController@salesChart',
    'as' => 'dashboard.salesChart'
]);
Route::get('/dashboard/items-chart',[
    'uses' => 'DashboardController@itemsChart',
    'as' => 'dashboard.itemsChart'
]);

web 
Route::view('/dashboard','dashboard.index');